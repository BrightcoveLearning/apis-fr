{
    "schemes": ["http","https"],
    "swagger": "2.0",
    "info": {
        "description": "This is a service that allows applying Concurrency mid-stream checks without DRM",
        "title": "Concurrency Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/accounts/{account_id}/sessions": {
            "get": {
                "description": "An endpoint that returns active sessions by viewerID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "GetActiveSessions endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active Sessions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Session"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized due to invalid token",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "An endpoint that allows or denies playback based on concurrency restrictions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Session endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Heartbeat Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.HeartbeatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playback allowed",
                        "schema": {
                            "$ref": "#/definitions/model.HeartbeatResponse"
                        }
                    },
                    "204": {
                        "description": "Feature not available for the account"
                    },
                    "401": {
                        "description": "Unauthorized due to invalid token",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden playback due to concurrency limit",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{account_id}/sessions/{session_id}": {
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "An endpoint that removes an active session by AccountID and SessionID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "StopSession endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful delete"
                    },
                    "401": {
                        "description": "Unauthorized due to invalid token",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ErrorDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "ACCESS_DENIED"
                },
                "message": {
                    "type": "string",
                    "example": "Video not available."
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/model.ErrorDetails"
                }
            }
        },
        "model.HeartbeatRequest": {
            "type": "object",
            "properties": {
                "sid": {
                    "type": "string"
                },
                "video": {
                    "type": "string"
                }
            }
        },
        "model.HeartbeatResponse": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "heartbeat_interval": {
                    "type": "integer"
                },
                "max": {
                    "type": "integer"
                }
            }
        },
        "model.Session": {
            "type": "object",
            "properties": {
                "end_viewer_id": {
                    "type": "string"
                },
                "last_seen": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "stopped": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWTAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Heartbeat related endpoints",
            "name": "Heartbeat"
        }
    ]
}